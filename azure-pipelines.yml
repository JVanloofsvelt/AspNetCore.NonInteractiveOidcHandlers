# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

name: $(SourceBranchName)$(Rev:.r)

trigger:
- master
- release/*

pr:
- master
- release/*

pool:
  vmImage: 'vs2017-win2016'

variables:
  buildConfiguration: 'Release'
  dotnetcore.version: '2.1.403'

steps:
#- task: DotNetCoreInstaller@0
#  displayName: 'Use .NET Core sdk 2.1.500'
#  inputs:
#    version: 2.1.500

- task: PowerShell@2
  inputs:
    targetType: 'filePath'
    filePath: 'tools\extract-version-number.ps1'
    arguments: '-BuilderNumber $(Build.BuildNumber)'
    failOnStderr: true
  displayName: 'Extract version numbers'

- script: dotnet build --configuration $(buildConfiguration) -p:Version=$(version)
  displayName: 'dotnet build $(buildConfiguration)'
 
#- task: VisualStudioTestPlatformInstaller@1
#  displayName: 'Visual Studio Test Platform Installer'
  
#- task: VSTest@2
#  displayName: 'Run tests'
#  inputs:
#    testAssemblyVer2: |
#     test\**\*Tests.dll
#     !**\*TestAdapter.dll
#     !**\obj\**
#    runInParallel: true
#- task: DotNetCoreCLI@2
#  displayName: 'dotnet test'
#  inputs:
#    command: test
#    projects: 'test/**/*.csproj'
#    arguments: '--configuration $(BuildConfiguration)'
    
- task: DotNetCoreCLI@2
  displayName: 'dotnet pack pre-release package'
  inputs:
    command: custom
    projects: 'src\AspNetCore.NonInteractiveOidcHandlers\AspNetCore.NonInteractiveOidcHandlers.csproj'
    custom: pack
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory) -p:Version=$(Build.BuildNumber) -p:PackageVersion=$(Build.SourceBranchName)-pre.$(BuildRevision)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack release package'
  inputs:
    command: custom
    projects: 'src\AspNetCore.NonInteractiveOidcHandlers\AspNetCore.NonInteractiveOidcHandlers.csproj'
    custom: pack
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory) -p:Version=$(Build.BuildNumber) -p:PackageVersion=$(Build.SourceBranchName)'
  
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'

- task: CopyFiles@2
  displayName: 'Stage tools'
  inputs:
    SourceFolder: tools
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    CleanTargetFolder: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: tools'
  inputs:
    ArtifactName: tools